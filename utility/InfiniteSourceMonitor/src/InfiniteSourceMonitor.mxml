<?xml version="1.0" encoding="utf-8"?>
<!--
   Copyright 2012, The Infinit.e Open Source Project
   
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   
   http://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:local="*"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	creationComplete="creationCompleteHandler(event)">
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace local "*";
		
		mx|DataGrid
		{
			vertical-grid-lines: false;
			alternating-item-colors: #FFFFFF, #FFFFFF;
		}
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSONDecoder;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private static var ENDPOINT_URL:String = flash.external.ExternalInterface.call( "getEndPointUrl" );
			
			protected function creationCompleteHandler( event:FlexEvent ):void
			{
				loggedInService.url = ENDPOINT_URL + "auth/keepalive";
				personService.url = ENDPOINT_URL + "social/person/get/";
				
				loggedInService.send();
			}
			
			protected function loggedInService_faultHandler( event:FaultEvent ):void
			{
				Alert.show( "Error: Could not contact api server to ensure login using api address " + ENDPOINT_URL );
			}
			
			protected function loggedInService_resultHandler( event:ResultEvent ):void
			{
				var json:JSONDecoder = new JSONDecoder( event.result as String, true );
				var data:Object = json.getValue();
				
				if ( data.response.success == true )
				{
					personService.send();
				}
				else
				{
					Alert.show( "You must be logged in before accessing this monitoring page" );
				}
			}
			
			protected function personService_faultHandler( event:FaultEvent ):void
			{
				Alert.show( "Error: Could not contact api server to get person object" );
			}
			
			protected function personService_resultHandler( event:ResultEvent ):void
			{
				var json:JSONDecoder = new JSONDecoder( event.result as String, true );
				var data:Object = json.getValue();
				var comms:ArrayCollection = new ArrayCollection( data.data.communities );
				sourceStatusView.loadSourceData( comms );
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="loggedInService"
			fault="loggedInService_faultHandler(event)"
			result="loggedInService_resultHandler(event)" />
		<s:HTTPService id="personService"
			fault="personService_faultHandler(event)"
			result="personService_resultHandler(event)" />
	</fx:Declarations>


	<s:VGroup 
		width="100%"
		height="100%"
		horizontalAlign="center"
		verticalAlign="top">
		<s:Label 
			text="Source Harvest Status"
			fontSize="26"
			paddingBottom="2"
			paddingTop="5" />
		<local:SourceStatusView id="sourceStatusView"
			width="100%"
			height="100%" />
	</s:VGroup>
</s:Application>
